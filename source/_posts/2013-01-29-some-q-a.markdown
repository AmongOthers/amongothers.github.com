---
layout: post
title: "一些自问自答"
date: 2013-01-29 21:31
comments: true
published: false
categories: pm
tags: [tips, pm]
---

今天郁闷了一天，一直在生闷气，没有心情工作。原因是什么呢？现在的工作不是我想要的。担任PM和开发的工作，现在的workflow让我觉得碌碌无为。从公司前景和同事氛围考虑，环境并不理想。

作为developer来说，很难有完整的时间来写代码，时不时有人反馈BUG什么的。事实上已经很久没有完整的哪怕一个小时写代码了，这绝对是很糟糕的事情。但是*抱怨而不去做什么改变，其实是放弃了责任的同时放弃了自由。*不妨尝试约法三章，你要知道没有人能够逼你，选择权在你。一天的workflow这样开始(*不要做过于偏激的设想，但是干扰)

* 早会(9:15 ~ 9:30)
* 最难的工作(9:30 ~ 12:00) 并不意味着要一个人做。
* 继续早上的工作或者checkout下一个任务(14:00 ~ 16:00)
* 检查redmine上报告的错误(16:00 ~ 18:00)，如果解决不了，那么生成任务
* 每天安排最多2个小时收集和加工问题

>> 2010年时，Eldarion将他们的工作日分解成至少两块中间无中断的时间块。在时间块之间你可以和同事沟通交流。这种方式的优点在于如果你遇到了麻烦或者某人有一个很紧急的问题，时间块之间的空隙就能解决这个问题。理论上这也是大多数地方都在采用的方法（午饭时间就是空隙）。事实上干扰常常会蜂涌而至。对于Eldarion来说这种方法很奏效，因为大家都是远程工作。

问题的分类：

* 环境的原因，例如手机离线，网络原因，这些是特例，不需要生成任务。但是要总结下来给运营人员(维护FAQ)
* 代码的BUG导致的，这时候需要对代码进行调整，需要生成任务(不要天知地知你知我知) ，进行安排。
* 程序结构性或者功能缺失问题，需要比较长的时间周期，那么确保每天可以有完整的时间工作就很重要，否则这些BUG永远得不到解决。
* 对于暂时无法解决，需要发布一个新版本的，详细地登记错误描述，如何重现和相关日志，然后马上拒绝，不要考虑太多。你没有办法许诺你无法许诺的事情。

关于一些项目实践实施不畅的原因：

>> 我也曾经听说过这样的现象 ，对于项目例会只是应付一下或者不合作的态度，其实并不是员工对此的抵触情绪，而是因为领导者/组织者的专业化水平不够，没有让成员对这样的活动体验到价值，大家都应该在自己的身上找原因，当然是最应当先从领导者开始。

真是一针见血，而我对此感到生气是不是太过无能了呢？

举个例子，对于晨会实施的很失败，原因就是组织方式不对，没有参照正确的组织方法。

>> developer要有长远的目光，遇到一个错误，可能马上说，"因为XXX所以就这样"。但是，一个优秀的developer必然会多问自己一个问题: "有没有一劳永逸的方法？又或者另外的解决途径？"


PM的workflow也不是很流畅，少了时间评估就作用不大了。如何对付那些不喜欢进行时间评估的程序员？

免不了这些那些的事情，毕竟不是你一个人的项目，学会如何沟通很重要。而在实施别人认为"激进"的措施的时候，如果说服呢？
站在这个位置，不要用命令式，公文式语气。

将必要的人牵涉进来，而不是自把自为。

*如何积极应对而不是消极应对？*

例如如果某个人做事的方式不符合你的风格，那么应该教他，而不是发脾气。

试着主动约定时间，而不是被动的等待，消极的应对。尽量避免停下手头上的活去思考也是很重要的。

但是，I am not a hero! 为什么要徒劳的消耗自己的精力？

我的性格的一个缺点，就是，大惊小怪，1.5G的内存？也并不验证一下。

