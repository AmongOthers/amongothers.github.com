<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[AmongOthers' Blog]]></title>
  <link href="http://AmongOthers.github.com/atom.xml" rel="self"/>
  <link href="http://AmongOthers.github.com/"/>
  <updated>2013-01-21T21:07:20+08:00</updated>
  <id>http://AmongOthers.github.com/</id>
  <author>
    <name><![CDATA[AmongOthers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[保持信息整洁]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/21/do-not-mess-it/"/>
    <updated>2013-01-21T20:58:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/21/do-not-mess-it</id>
    <content type="html"><![CDATA[<p>如果有用的信息隐藏在垃圾信息中，那么它的作用就大打折扣了。所以定期整理自己的知识库，使它精炼，就是必要的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Be yourself]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/21/be-yourself/"/>
    <updated>2013-01-21T20:27:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/21/be-yourself</id>
    <content type="html"><![CDATA[<p>习惯决定性格，性格决定命运，即使做的工作不顺心也好，不要忘记自己的原则，例如DRY，例如魔鬼在细节中，例如BUG比FEATURE更重要，这些原则也是程序员的素质所在。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[什么是好的主意]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/21/what-is-a-good-idea/"/>
    <updated>2013-01-21T13:42:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/21/what-is-a-good-idea</id>
    <content type="html"><![CDATA[<p>一个好的主意就是把不方便的东西变得方便，这就是程序员的使命。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DRY]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/21/dry/"/>
    <updated>2013-01-21T13:40:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/21/dry</id>
    <content type="html"><![CDATA[<p>DRY, DON&#8217;T REPEAT YOUSELF</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为什么我们逐渐失去了勇气]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/21/why-we-are-losing-courage/"/>
    <updated>2013-01-21T11:24:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/21/why-we-are-losing-courage</id>
    <content type="html"><![CDATA[<p>定下来的生活，家庭，职业目标没有完成，这样的拖延和懒惰，让我们逐渐失去了勇气。最可怕的是逐渐成为了一无是处的人，甚至变得对感情非常漠然，就好像某人说的，&#8221;你只是不愿意被人打扰你的生活而已&#8221;，然后成为了可悲可怜可恨的人。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[命令行调用sublime]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/19/using-sublime-with-console-on-windows/"/>
    <updated>2013-01-19T12:56:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/19/using-sublime-with-console-on-windows</id>
    <content type="html"><![CDATA[<p>I&#8217;ve created subl.bat in C:\Program Files\Sublime Text 2 with contents:</p>

<pre><code>start sublime_text.exe %* 
</code></pre>

<p>Now that I have C:\Program Files\Sublime Text 2 in PATH, I can simply type &#8216;subl folder&#8217; and it works wonderfully without having to add anything to autostart.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[长远的目标]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/16/long-target/"/>
    <updated>2013-01-16T19:31:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/16/long-target</id>
    <content type="html"><![CDATA[<p>你知道你这样是不行的，对于那些真正算得上目标的长远目标来说，这样的半吊子的努力是不行的。不能通过做某些事情来实现，而是通过成为那样的人才可能实现的目标。对于这些目标而言，3,4年或者5,6年甚至10年左右的时间才能够接近，而如果不从现在开始去学会坚持，那么它们可能一生都不可能实现了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[codebase]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/16/codebase/"/>
    <updated>2013-01-16T17:08:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/16/codebase</id>
    <content type="html"><![CDATA[<p>时间比金钱重要，程序员要不断投资，而他的一个极其重要的财富就是自己在参与的项目中所积累的能快速解决问题的codebase。一个没有codebase的程序员必将很辛苦。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编程语言的范式]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/16/programing-paradigm/"/>
    <updated>2013-01-16T17:03:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/16/programing-paradigm</id>
    <content type="html"><![CDATA[<p>c#的投影：</p>

<pre><code>Minutes = Records.Sum((record) =&gt; record.Minutes);
</code></pre>

<p>的确是不错的特性。不同的编程语言的表示能力和思维方法是有差异的。多了解一些范式有助于开阔思路。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[银行因人而异的零花钱]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/15/pocket-money/"/>
    <updated>2013-01-15T22:30:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/15/pocket-money</id>
    <content type="html"><![CDATA[<blockquote><blockquote><ul>
<li>在正确的对象中做消息分派的决策</li>
<li>消息链应该动态建立而不是静态建立</li>
</ul>
</blockquote></blockquote>

<p>银行推出了一个教育基金业务，参与的家庭如果有子女在读书，可以定期拿到钱，如果是高中生，就会给一定的金额（例如100）;如果是大学生，则给更多的金额(例如500)。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Bank</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPocketMoneyForUniversityStudent</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">500</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPocketMoneyForHighSchoolStudent</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">100</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Student</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">abstract</span> <span class="kt">int</span> <span class="nf">getPocketMoney</span><span class="o">(</span><span class="n">Bank</span> <span class="n">bank</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HighSchoolStudent</span> <span class="kd">extends</span> <span class="n">Student</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPocketMoney</span><span class="o">(</span><span class="n">Bank</span> <span class="n">bank</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">bank</span><span class="o">.</span><span class="na">getPocketMoneyForHighSchoolStudent</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UniversityStudent</span> <span class="kd">extends</span> <span class="n">Student</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPocketMoney</span><span class="o">(</span><span class="n">Bank</span> <span class="n">bank</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">bank</span><span class="o">.</span><span class="na">getPocketMoneyForUniversityStudent</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的代码主要的问题就是，在Bank这个类中，为了不同的对象的调用特化了接口，这是代码中的smell，一般来说，在命名上为了某种目的而特化而不是使用更具
有普遍性的抽象来命名，就导致了类的内部逻辑暴露而导致耦合，下面的情况：</p>

<ul>
<li>增加给小学生的零花钱的计划，则要Bank增加一个接口：getPocketMoneyForPrimarySchoolStudent</li>
<li>银行调整计划，对部分满足要求的高中生提供200元的金额，则要增加一个类或者枚举， 而Bank增加一个接口：
getPocketMoneyForOutstandingHighSchoolStudent</li>
</ul>


<blockquote><blockquote><p>接口设计应该提供对有关部件的方便访问形式，而同时又隐藏其实现的细节，这样，部件的修改才不会影响到使用者。</p></blockquote></blockquote>

<p>所以，一个名字很特化的接口就意味着暴露了内部的实现，导致代码耦合。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Bank</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPocketMoney</span><span class="o">(</span><span class="kd">final</span> <span class="n">Student</span> <span class="n">student</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span><span class="o">(</span><span class="n">student</span> <span class="k">instanceof</span> <span class="n">HighSchoolStudent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nf">getPocketMoneyForHighSchoolStudent</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">student</span> <span class="k">instanceof</span> <span class="n">UniversityStudent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nf">getPocketMoneyForUniversityStudent</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getPocketMoneyForHighSchoolStudent</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">100</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getPocketMoneyForUniversityStudent</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">500</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HighSchoolStudent</span> <span class="kd">extends</span> <span class="n">Student</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPocketMoney</span><span class="o">(</span><span class="n">Bank</span> <span class="n">bank</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">bank</span><span class="o">.</span><span class="na">getPocketMoney</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UniversityStudent</span> <span class="kd">extends</span> <span class="n">Student</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPocketMoney</span><span class="o">(</span><span class="n">Bank</span> <span class="n">bank</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">bank</span><span class="o">.</span><span class="na">getPocketMoney</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在下面的讨论中，会使用<em>消息</em>这些OOP理念中有特别意味的术语，并适当的用<em>方法</em>这个术语加以说明。</p>

<p>在OOP的设计中，<em>消息链</em>是一个本质性的东西，发送一个消息给对象，而这个消息根据其<em>内在的状态</em>和<em>发送消息的对象</em>，进行不同的<em>消息分派</em>，也就是说或
者选择<em>短响应</em>(在本方法里不调用其它方法而直接处理）, 或者 通过发送给自己某些公有的或者私有的消息（调用自己的公有或者私有方法），或者发送给其它
对象(包括自己的内部对象或者其它可见的对象）消息，来完成对初始消息的响应，这就是所谓的<em>消息链</em>。</p>

<p>如何将<em>发送消息的对象</em>告诉接受消息的对象呢？(也就是说，调用某个对象的方法，如何告诉被调用的对象是谁调用这个方法的)</p>

<p>Bank的接口：getPocketMoney(final Student student) 将调用这个接口的Student对象的实例作为参数（注意使用<em>final</em>是比较好的）。而刚开始接触OOP的人可
能会倾向于使用枚举，例如: getPocketMoney(StudentType.HIGHSCHOOL/StudentType.UNIVERSITY/&#8230;)，我认为枚举的使用对接口也是一种特化，本质上和第一种
实现并没有任何区别，它们都破坏了<em>消息链</em>的基本原则：</p>

<ul>
<li>在正确的对象中做消息分派的决策</li>
<li>消息链应该动态建立而不是静态建立</li>
</ul>


<p>现在增加一个需求：为杰出的高中生每个月提供200，如果使用枚举实现：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">enum</span> <span class="n">StudentType</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">HIGHSCHOOL</span><span class="o">,</span>
</span><span class='line'>  <span class="n">UNIVERSITY</span><span class="o">,</span>
</span><span class='line'>  <span class="n">OUTSTANDING_HIGHSCHOOL</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Bank</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPocketMoney</span><span class="o">(</span><span class="n">StudentType</span> <span class="n">type</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span><span class="o">(</span><span class="n">type</span> <span class="o">==</span> <span class="n">StudentType</span><span class="o">.</span><span class="na">HIGHSCHOOL</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nf">getPocketMoneyForHighSchoolStudent</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">type</span> <span class="o">==</span> <span class="n">StudentType</span><span class="o">.</span><span class="na">UNIVERSITY</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nf">getPocketMoneyForUniversityStudent</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">type</span> <span class="o">==</span> <span class="n">StudentType</span><span class="o">.</span><span class="na">OUTSTANDING_HIGHSCHOOL</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nf">getPocketMoneyForOutstandingHighSchool</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getPocketMoneyForHighSchoolStudent</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">100</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getPocketMoneyForUniversityStudent</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">500</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getPocketMoneyForOutstandingHighSchool</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">200</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HighSchoolStudent</span> <span class="kd">extends</span> <span class="n">Student</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">mScore</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">HighSchoolStudent</span><span class="o">(</span><span class="kt">int</span> <span class="n">score</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">mScore</span> <span class="o">=</span> <span class="n">score</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPocketMoney</span><span class="o">(</span><span class="n">Bank</span> <span class="n">bank</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span><span class="o">(</span><span class="n">mScore</span> <span class="o">&lt;</span> <span class="mi">90</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">bank</span><span class="o">.</span><span class="na">getPocketMoney</span><span class="o">(</span><span class="n">StudentType</span><span class="o">.</span><span class="na">HIGHSCHOOL</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">bank</span><span class="o">.</span><span class="na">getPocketMoney</span><span class="o">(</span><span class="n">StudentType</span><span class="o">.</span><span class="na">OUTSTANDING_HIGHSCHOOL</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>按照上面的实现，如果银行修改标准，80分以上的就可以认为是OutstandingHighSchoolStudent，那么就需要修改HighSchoolStudent的代码，而不是Bank的代码，
这样很奇怪，不是吗？原因就在于我们在错误的对象中去做<em>消息分派</em>，评价是否OutStandingHighSchoolStudent的逻辑本来就应该出现在Bank中。另一方面来说
，银行决定是否OutStandingHighSchoolStudent的标准如果是动态变化的，那么使用枚举而产生特化的接口就无法做到了，<em>消息分派</em>应该尽可能动态（或者术语：
<em>晚绑定</em>）。当接口使用枚举作为参数的时候，可能意味着这是一种代码的smell。</p>

<p><em>动态构建消息链</em>的版本：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">zww</span><span class="o">.</span><span class="na">pocketmoney</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Bank</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">mOutstandingScore</span> <span class="o">=</span> <span class="mi">90</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setOutstandingScore</span><span class="o">(</span><span class="kt">int</span> <span class="n">score</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">mOutstandingScore</span> <span class="o">=</span> <span class="n">score</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPocketMoney</span><span class="o">(</span><span class="kd">final</span> <span class="n">Student</span> <span class="n">student</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span><span class="o">(</span><span class="n">student</span> <span class="k">instanceof</span> <span class="n">HighSchoolStudent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">HighSchoolStudent</span> <span class="n">hsStudent</span> <span class="o">=</span> <span class="o">(</span><span class="n">HighSchoolStudent</span><span class="o">)</span><span class="n">student</span><span class="o">;</span>
</span><span class='line'>          <span class="k">if</span><span class="o">(</span><span class="n">hsStudent</span><span class="o">.</span><span class="na">getScore</span><span class="o">()</span> <span class="o">&lt;</span> <span class="n">mOutstandingScore</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span> <span class="nf">getPocketMoneyForHighSchoolStudent</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span> <span class="nf">getPocketMoneyForOutstandingHighSchoolStudent</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">student</span> <span class="k">instanceof</span> <span class="n">UniversityStudent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nf">getPocketMoneyForUniversityStudent</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getPocketMoneyForHighSchoolStudent</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">100</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getPocketMoneyForUniversityStudent</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">500</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getPocketMoneyForOutstandingHighSchoolStudent</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">200</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>补充：对于弱类型语言来说，就不能通过这种方法实现。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jack需要一个人或者两个人来签署文件]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/15/sign-file/"/>
    <updated>2013-01-15T22:21:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/15/sign-file</id>
    <content type="html"><![CDATA[<p>职工jack的工作需要将文件(OfficeFile)交给他的上司审阅，上司会在文件上标记同意与否，然后署名。一般而言，jack只需要把文件交给mick审阅就可以了。有时候他需要先把文件交给mike审阅，然后给另一个上司lily审阅，只有双方都同意，这份文件才能通过（当然如果mike已经不同意了，那么就不需要交给lily了），不过文件上只有一个署名栏，这个时候不需要lily的署名。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[让事情完成]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/10/make-it-smart/"/>
    <updated>2013-01-10T15:00:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/10/make-it-smart</id>
    <content type="html"><![CDATA[<p>设定目标的时候，如果能短时间之内做好，那么立刻去做；否则，明确的给出SMART目标，不要只是想着&#8221;有一天会去做&#8221;或者&#8221;有时间就会做&#8221;。只有坚持完成的目标才能带来价值，东一榔头西一棒子只是徒劳无益。
这就是所谓的<em>GTD</em>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[总是选择困难的道路]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/09/choose-the-difficult-one/"/>
    <updated>2013-01-09T22:04:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/09/choose-the-difficult-one</id>
    <content type="html"><![CDATA[<p>抱怨环境不够理想，抱怨做着自己不喜欢的工作，抱怨自己的未来不明朗，抱怨自己有很多责任。你并没有资格去享受那些你梦寐以求的东西，所以面对困难，是否能够坚持什么，从而实现自己的价值？抱怨是多么容易，想法设法逃避问题是多么容易，试图拖延问题是多么容易，但是这个时候更需要努力坚持，选择困难的道路。</p>

<p>生活是多么的不容易，每当看到别人过着机会更少的人生的时候，就觉得自己是多么卑鄙而愚蠢。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[勿以善小而不为，勿以恶小而为之]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/08/good-or-bad/"/>
    <updated>2013-01-08T22:58:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/08/good-or-bad</id>
    <content type="html"><![CDATA[<p>如果说总结这几年的程序开发有什么经验之谈, 或者说, 希望自己能做到的职业素质，那么我觉得是:</p>

<blockquote><p>勿以善小而不为, 勿以恶小而为之</p></blockquote>

<p>就会少了很多在将来的某个时候的猛击.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[加入好的社区, 了解时代的步伐]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/07/good-community/"/>
    <updated>2013-01-07T22:14:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/07/good-community</id>
    <content type="html"><![CDATA[<p>一个好的社区很重要, 可以及时了解到一些新的东西, 像是Ruby社区, 间接了解到了octopress和sublime, 一个人的视野真的太狭窄了, 如果想要提高自己, 要更多的交流和分享.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Developer Guidelines]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/06/developer-guidelines/"/>
    <updated>2013-01-06T23:54:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/06/developer-guidelines</id>
    <content type="html"><![CDATA[<p>每一个非单元测试的BUG都应该建立追踪，开发人员close这个BUG的时候必须提交版本控制的编号范围。尽可能采取颗粒度小的提交，以便清楚跟踪每个BUG的被修改历史。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[优化的噩梦]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/06/optimization-nightmare/"/>
    <updated>2013-01-06T00:09:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/06/optimization-nightmare</id>
    <content type="html"><![CDATA[<p>试着对问题理解更深，这样代码质量才能螺旋上升；而不是针对某个层次的理解不断进行优化，这样得到的代码质量的上升程度只是噪声而已。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[项目管理修炼之道]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/05/manageit/"/>
    <updated>2013-01-05T23:36:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/05/manageit</id>
    <content type="html"><![CDATA[<p>作为项目经理，如何认识什么才是一个项目呢？项目的某个分支需要1,2周的修改来发布一个不同的产品线，这个过程可以作为一个项目来运作。但是更深一层来说，整个代码库是否应该作为一个项目来运作，它的周期会长达1,2年，而足够灵活，以便快速调整，可以很快发布一个分支适用于不同的产品线，这个是项目的一个目标。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小而精悍]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/04/small-and-agile/"/>
    <updated>2013-01-04T18:57:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/04/small-and-agile</id>
    <content type="html"><![CDATA[<p>今天一个同事在闲聊中告诉我，关于他的一个同学所在的公司，用5个人2个月的时间做了两款产品，一个是android平台上的游戏大厅，里面可以下载很多游戏，用户每下一个游戏公司就会收到提成; 另外一个是PC上的装机软件，给android手机灌装有酬金的软件，每天装大约1000台手机，每台手机收入5, 6元。 这么小的公司，月收入相当可观。所以说，有时候我们的视野是否太过狭窄，没有做足够多的尝试，活得太肤浅, 没有现实感。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[keroro]]></title>
    <link href="http://AmongOthers.github.com/blog/2013/01/03/keroro/"/>
    <updated>2013-01-03T15:01:00+08:00</updated>
    <id>http://AmongOthers.github.com/blog/2013/01/03/keroro</id>
    <content type="html"><![CDATA[<h1>keroro 出击!</h1>

<p>BANDAI&copy;的keroro的模型入手, 现在来目睹keroro的诞生.</p>

<p>盒子:</p>

<p><img src="http://AmongOthers.github.com/images/keroro/box.jpg" alt="" /></p>

<!-- more -->


<p>首先补习一下模型的一些基本概念:</p>

<blockquote><p>全新的板件你見過吧？板件上除了零件以外的部份，就是流道。 分線膜沒聽過，分模線倒是有。一般板件都是上下兩個模具合在一起，然後再往裏面注料而形成的。模具之間即使密合度再高，或多或少都會有點縫隙。在這種情況下再注料，就會在零件上造成注料溢漏。輕微的溢漏會在零件上形成一條突出的線，就是分模線。其實現在B社的出品已經把分模線現象控制得比較好了。就是國產出品的分模線還比較嚴重，甚至有的會形成大片的注料溢漏，俗稱漏膠……</p></blockquote>

<p>看看板件:</p>

<p><img src="http://AmongOthers.github.com/images/keroro/panel.jpg" alt="" /></p>

<p>注意，这个小小的黑色板件就是PC板件，上面的主要是连接部件:</p>

<p><img src="http://AmongOthers.github.com/images/keroro/pc_panel.jpg" alt="" /></p>

<p>所以事实上是非常简单的工程, 适合8岁以上儿童.
但是坑爹的说明书竟然是日文的有没有!只好按图索骥了.
而且发现要从板件上剪下部件，需要刀刃很薄的剪刀，或者用专门的剪钳，楼主手上只有普通的剪刀，只好将就着用了.因此对部件的周围造成了一定的摩擦性损伤，出现了白点并且有毛刺.</p>

<p>完成的第一个组件，狰狞的前胸像:</p>

<p><img src="http://AmongOthers.github.com/images/keroro/robot_front.jpg" alt="" /></p>

<p>双足:</p>

<p><img src="http://AmongOthers.github.com/images/keroro/foot.jpg" alt="" /></p>

<p>像是做手，足这种对称性结构的时候，部件在板上一般都是成对出现的，可能以为把它们都剪下来会比较方便，但是对于新手，可能会造成困惑，而导致装反了，所以还是不要这么做.</p>

<p>双腕:</p>

<p><img src="http://AmongOthers.github.com/images/keroro/hand.jpg" alt="" /></p>

<p>robot完成:</p>

<p><img src="http://AmongOthers.github.com/images/keroro/robot.jpg" alt="" /></p>

<p>本体:</p>

<p><img src="http://AmongOthers.github.com/images/keroro/keroro.jpg" alt="" /></p>

<p>keroro出击:</p>

<p><img src="http://AmongOthers.github.com/images/keroro/go.jpg" alt="" /></p>
]]></content>
  </entry>
  
</feed>
